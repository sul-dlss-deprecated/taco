// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sul-dlss-labs/taco/generated/models"
)

// RetrieveResourceOKCode is the HTTP code returned for type RetrieveResourceOK
const RetrieveResourceOKCode int = 200

/*RetrieveResourceOK OK

swagger:response retrieveResourceOK
*/
type RetrieveResourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Resource `json:"body,omitempty"`
}

// NewRetrieveResourceOK creates RetrieveResourceOK with default headers values
func NewRetrieveResourceOK() *RetrieveResourceOK {
	return &RetrieveResourceOK{}
}

// WithPayload adds the payload to the retrieve resource o k response
func (o *RetrieveResourceOK) WithPayload(payload *models.Resource) *RetrieveResourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve resource o k response
func (o *RetrieveResourceOK) SetPayload(payload *models.Resource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveResourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveResourceNotFoundCode is the HTTP code returned for type RetrieveResourceNotFound
const RetrieveResourceNotFoundCode int = 404

/*RetrieveResourceNotFound Resource not found

swagger:response retrieveResourceNotFound
*/
type RetrieveResourceNotFound struct {
}

// NewRetrieveResourceNotFound creates RetrieveResourceNotFound with default headers values
func NewRetrieveResourceNotFound() *RetrieveResourceNotFound {
	return &RetrieveResourceNotFound{}
}

// WriteResponse to the client
func (o *RetrieveResourceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

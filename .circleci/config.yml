version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/golang:latest
      - image: localstack/localstack
        environment:
          DEBUG: 1
          SERVICES: dynamodb
          DATA_DIR: /tmp/localstack/data
          working_directory: ~/workflows
    working_directory: /go/src/github.com/sul-dlss-labs/taco
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
      - run:
          name: Run Unit Tests
          command: go test -v ./... -short
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install awscli
      - run:
          name: Create table
          command: AWS_ACCESS_KEY_ID=999 AWS_SECRET_ACCESS_KEY=999 aws dynamodb create-table
            --endpoint-url=http://localhost:4569 --table-name resources
            --region localstack
            --attribute-definitions "AttributeName=id,AttributeType=S"
            --key-schema "AttributeName=id,KeyType=HASH"
            --provisioned-throughput=ReadCapacityUnits=10,WriteCapacityUnits=10
      - run:
          name: Start server
          command: cd cmd/tacod && AWS_ACCESS_KEY_ID=999 AWS_SECRET_KEY=999 go run main.go --port 3000
          background: true
      - run:
          name: wait for server
          command: sleep 5
      - run:
          name: Integration test
          command: go test test/integration_test.go --port 3000


  register_image:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/sul-dlss-labs/taco
    steps:
      - setup_remote_docker:
          version: 17.09.0-ce
      - checkout
      - run:
          name: Build Image & Register Task
          command: |
            docker build -t suldlss/taco:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push suldlss/taco:$CIRCLE_SHA1

  # deploy_to_dev:
  #   docker:
  #     - image: circleci/golang:latest
  #   working_directory: /go/src/github.com/sul-dlss-labs/taco
  #   steps:
  #     - run:
  #         name: Install AWS CLI
  #         command: |
  #           sudo apt-get install -y python-pip libyaml-dev python-dev jq
  #           sudo pip install awscli
  #     - checkout
  #     - run:
  #         name: Inject Environment Variables into Container (dev)
  #         command: |
  #           sed -i "s|REPLACE_TAG|$CIRCLE_SHA1|" container-definition.json
  #           cat container-definition.json  # Print task definition in logs
  #     - run:
  #         name: Register Task & Update Service (dev)
  #         command: |
  #           export AWS_ACCESS_KEY_ID=$DEV_AWS_KEY
  #           export AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET
  #           aws configure set region $DEV_AWS_REGION
  #           aws configure set default.output json
  #           aws configure list  # Get confirmation it worked in your logs
  #           revision=$(aws ecs register-task-definition --cli-input-json file://container-definition.json --region $DEV_AWS_REGION | jq --raw-output --exit-status '.taskDefinition.taskDefinitionArn')
  #           aws ecs update-service --cluster default --service taco --task-definition "$revision" --region $DEV_AWS_REGION

workflows:
  version: 2

  build_and_test:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: master

  deploy_on_tags:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*(-dev)/
      - register_image:
          requires:
            - build_and_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-dev)/
      # - deploy_to_dev:
      #     requires:
      #       - register_image
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /v[0-9]+(\.[0-9]+)*(-dev)/

  deploy_master_to_dev:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - register_image:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      # - deploy_to_dev:
      #     requires:
      #       - register_image
      #     filters:
      #       branches:
      #         only: master
      #       tags:
      #         ignore: /.*/

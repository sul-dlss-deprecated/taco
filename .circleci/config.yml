# define often used filter
filter_on_master_ignore_tags: &filter_on_master_ignore_tags
  filters:
    branches:
      only: master
    tags:
      ignore: /.*/


version: 2
jobs:
  run_unit_tests:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/sul-dlss-labs/taco
    steps:
      - checkout
      - run:
          name: Check for changes when running generator
          command: go generate && git status | grep modified && sh -c "exit 1" || echo "Success. No changes were found"
      - run:
          name: Run unit tests
          command: make

  run_e2e_tests:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/sul-dlss-labs/identifier-service
    steps:
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - checkout
      - run:
          name: Run End to End Tests
          command: |
            docker-compose build
            docker-compose up -d
            docker-compose run resources
            docker-compose run tester

  register_image:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/sul-dlss-labs/taco
    steps:
      - setup_remote_docker:
          version: 17.09.0-ce
      - checkout
      - run:
          name: Build Image & Register Task
          command: |
            docker build -t suldlss/taco:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push suldlss/taco:latest

  deploy_to_demo:
    docker: # NOT the default (awscli is python-based)
      - image: circleci/python:3.7-stretch-node-browsers
    working_directory: ~
    steps:
      - run: sudo pip install awscli
      - run:
          name: Register Task & Update Service (demo)
          command: |
            export AWS_ACCESS_KEY_ID=$DEMO_AWS_KEY
            export AWS_SECRET_ACCESS_KEY=$DEMO_AWS_SECRET
            aws configure set region $DEMO_AWS_REGION
            aws configure set default.output json
            aws configure list  # Get confirmation it worked in your logs
            task_arn=$(aws ecs list-task-definitions --family-prefix taco --sort DESC --max-items 1 | jq --raw-output --exit-status '.taskDefinitionArns[]')
            cluster_arn=$(aws ecs list-clusters --region $DEMO_AWS_REGION | jq --raw-output --exit-status '.clusterArns[] | select(contains("infrastucture"))')
            aws ecs update-service --cluster "$cluster_arn" --service taco --task-definition "$task_arn" --region $DEMO_AWS_REGION

workflows:
  version: 2

  run_tests:
    jobs:
      - run_unit_tests:
          filters:
            branches:
              ignore: master
      - run_e2e_tests:
          filters:
            branches:
              ignore: master

  deploy_on_tags:
    jobs:
      - run_unit_tests:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*(-demo)/
      - run_e2e_tests:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*(-demo)/
      - register_image:
          requires:
            - run_unit_tests
            - run_e2e_tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*(-demo)/
      - deploy_to_demo:
          requires:
            - register_image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-demo)/

  deploy_master_to_demo:
    jobs:
      - run_unit_tests:
          <<: *filter_on_master_ignore_tags
      - run_e2e_tests:
          <<: *filter_on_master_ignore_tags
      - register_image:
          requires:
            - run_unit_tests
            - run_e2e_tests
          <<: *filter_on_master_ignore_tags
      - deploy_to_demo:
          requires:
            - register_image
          <<: *filter_on_master_ignore_tags
